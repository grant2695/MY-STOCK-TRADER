{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/stockReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","actions/stockActions.js","components/dashboard/Dashboard.js","components/private-route/PrivateRoute.js","components/dashboard/History.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","arguments","length","undefined","action","console","log","_objectSpread","stock","stockReducers_objectSpread","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Navbar","react_default","a","createElement","className","style","background","padding","react_router_dom","to","fontFamily","color","fontWeight","Component","Landing","height","width","borderRadius","letterSpacing","Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","complete","url","func","symbol","apiKey","returnPurchase","returnSale","returnUpdate","HeldStock","_ref","shares","currentValue","openValue","performanceColor","Dashboard","onLogoutClick","onUpdateClick","updateStocks","result","portfolio","ownedStocks","processRequest","_ref2","asyncToGenerator","regenerator_default","mark","_callee","tradeRequest","stockRequest","wrap","_context","prev","next","abrupt","Promise","resolve","reject","setTimeout","stop","_x","_x2","_x3","onBuyClick","_ref3","_callee2","_context2","quantity","buyStock","balance","_x4","onSellClick","_ref4","_callee3","_context3","sellStock","_x5","portfolioSum","map","ii","unit_price","open_price","key","placeholder","marginRight","onClick","tradeInfo","get","obj","dateStr","keys","info","tradeData","userId","stockInfo","component","rest","objectWithoutProperties","react_router","assign","render","Record","date","t_type","price","sign","History","transactions","record","Date","toDateString","transaction_type","stock_quantity","stock_price","jwtToken","currentTime","now","exp","window","location","href","App","es","layout_Navbar","exact","path","private_route_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb86d6f8.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n    if(token) {\r\n      // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n//\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/api/users/register\", userData)\r\n        .then(res => history.push(\"/login\")) // redirect to login on succ register\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n            \r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n        .post(\"/api/users/login\", userData)\r\n        .then(res => {\r\n            // Save to localStorage\r\n\r\n            // Set token to localStorage\r\n            const { token } = res.data;\r\n            console.log(res.data)\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            // Set token to auth header\r\n            setAuthToken(token);\r\n\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token, {complete: true});\r\n            console.log(decoded)\r\n            // set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n    return {\r\n        type: USER_LOADING\r\n    };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header for future requets\r\n    setAuthToken(false);\r\n    //set current user to empty object {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const BUY_STOCK = \"BUY_STOCK\";\r\nexport const SELL_STOCK = \"SELL_STOCK\";\r\nexport const UPDATE_STOCKS = \"UPDATE_STOCKS\";\r\n//","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_CURRENT_USER:\r\n        console.log(\"SET CURRENT USER\")    \r\n        return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    BUY_STOCK,\r\n    SELL_STOCK,\r\n    UPDATE_STOCKS\r\n} from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case BUY_STOCK:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        case SELL_STOCK:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        case UPDATE_STOCKS:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n        }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducers from \"./authReducers\";\r\nimport stockReducers from \"./stockReducers\";\r\nimport errorReducers from \"./errorReducers\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducers,\r\n  stock: stockReducers,\r\n  errors: errorReducers\r\n});\r\n\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        //window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        //window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-dark\" style={{background:\"white\", padding:\"7px\"}}>\r\n\r\n                <ul>\r\n                    <li>\r\n                        <Link className=\"black-text\" \r\n                            to=\"/\" \r\n                            style = {{ fontFamily: \"monospace\"}}\r\n                        >\r\n                        Virtual Stock Trading\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"col s3 black-text \"\r\n                            to=\"/Dashboard\"\r\n                            style={{\r\n                                color: \"grey\",\r\n                                fontFamily: \"monospace\",\r\n                                fontWeight: \"bold\",\r\n                                padding: \"16dp\"\r\n                            }}\r\n                            >\r\n                                Portfolio\r\n                            </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"col s3 black-text \"\r\n                            to=\"/History\"\r\n                            style={{\r\n                                color: \"grey\",\r\n                                fontFamily: \"monospace\",\r\n                                fontWeight: \"bold\",\r\n                                padding: \"16dp\"\r\n                            }}\r\n                            >\r\n                                Transactions\r\n                            </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4>\r\n                            <b>Trade Stocks</b> with this {\" \"}\r\n                            <span style={{ fontFamily: \"monospace\"}}>Stock Trading Web App</span>!\r\n                        </h4>\r\n                        <p className=\"flow-text grey-text text-darken-1\">\r\n                            Trade stocks on this minimal platform!\r\n                        </p>\r\n                        <br />\r\n                        <div className=\"col s6\">\r\n                                      <Link\r\n                                      to=\"/register\"\r\n                                      style={{\r\n                                        width: \"140px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\"\r\n                                      }}\r\n                                      className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                                    >\r\n                                      Register\r\n                                    </Link>\r\n                        </div>\r\n                        <div className=\"col s6\">\r\n                            <Link\r\n                                to=\"/login\"\r\n                                style={{\r\n                                    width: \"140px\",\r\n                                    borderRadius: \"3px\",\r\n                                    letterSpacing: \"1.5px\"\r\n                                }}\r\n                                className=\"btn btn-large btn-flat waves-effect white black-text\">\r\n                                    Login\r\n                                </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            errors: {}\r\n        };\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n      // If logged in and user comes here, redirect to dashboard\r\n      if (this.props.auth.isAuthenticated) {\r\n        this.props.history.push(\"/dashboard\");\r\n      }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n    \r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n\r\n        console.log(newUser);\r\n\r\n        this.props.registerUser(newUser, this.props.history);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col s8 offset-s2\">\r\n                  <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                    <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n                    home\r\n                  </Link>\r\n                  <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                    <h4>\r\n                      <b>Register</b> below\r\n                    </h4>\r\n                    <p className=\"grey-text text-darken-1\">\r\n                      Already have an account? <Link to=\"/login\">Log in</Link>\r\n                    </p>\r\n                  </div>\r\n                  <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"input-field col s12\">\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.name}\r\n                        error={errors.name}\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        className={classnames(\"\", {\r\n                            invalid: errors.name\r\n                        })}\r\n                      />\r\n                      <label htmlFor=\"name\">Name</label>\r\n                      <span className=\"red-text\">{errors.name}</span>\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.email}\r\n                        error={errors.email}\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        className={classnames(\"\", {\r\n                            invalid: errors.email\r\n                        })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.email}</span>\r\n                      <label htmlFor=\"email\">Email</label>\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.password}\r\n                        error={errors.password}\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        className={classnames(\"\", {\r\n                            invalid: errors.password\r\n                          })}\r\n                      />\r\n                      <span className=\"red-text\">{errors.password}</span>\r\n                      <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.password2}\r\n                        error={errors.password2}\r\n                        id=\"password2\"\r\n                        type=\"password\"\r\n                        className={classnames(\"\", {\r\n                            invalid: errors.password2\r\n                          })}\r\n                      />\r\n                      \r\n                      <label htmlFor=\"password2\">Confirm Password</label>\r\n                      <span className=\"red-text\">{errors.password2}</span>\r\n                    </div>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                      <button\r\n                        style={{\r\n                          width: \"150px\",\r\n                          borderRadius: \"3px\",\r\n                          letterSpacing: \"1.5px\",\r\n                          marginTop: \"1rem\"\r\n                        }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                      >\r\n                        Sign up\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n) (withRouter(Register));  ","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      // if logged in and user comes here, redirect to dashboard\r\n      if (this.props.auth.isAuthenticated) {\r\n        this.props.history.push(\"/dashboard\");\r\n      }\r\n    }\r\n\r\n    // deprecated\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n        }\r\n    if (nextProps.errors) {\r\n          this.setState({\r\n            errors: nextProps.errors\r\n          });\r\n        }\r\n      } \r\n    \r\n /*   static getDerivedStateFromProps(nextProps) {\r\n      if (nextProps.auth.isAuthenticated) {\r\n        return { history: (\"/dashboard\") }// push user to dashboard when they login\r\n      }\r\n      if (nextProps.errors) {\r\n        return {\r\n          errors: nextProps.errors\r\n        };\r\n      }\r\n    }\r\n*/\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n    return (\r\n          <div className=\"container\">\r\n            <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n              <div className=\"col s8 offset-s2\">\r\n                <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                  <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n                  home\r\n                </Link>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                  <h4>\r\n                    <b>Login</b> below\r\n                  </h4>\r\n                  <p className=\"grey-text text-darken-1\">\r\n                    Don't have an account? <Link to=\"/register\">Register</Link>\r\n                  </p>\r\n                </div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                  <div className=\"input-field col s12\">\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.email}\r\n                      error={errors.email}\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      className={classnames(\"\", {\r\n                        invalid: errors.email || errors.emailnotfound\r\n                      })}\r\n                    />\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <span className=\"red-text\">\r\n                      {errors.email}\r\n                      {errors.emailnotfound}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"input-field col s12\">\r\n                    <input\r\n                      onChange={this.onChange}\r\n                      value={this.state.password}\r\n                      error={errors.password}\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      className={classnames(\"\", {\r\n                        invalid: errors.password || errors.passwordincorrect\r\n                      })}\r\n                    />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <span className=\"red-text\">\r\n                      {errors.password}\r\n                      {errors.passwordincorrect}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                    <button\r\n                      style={{\r\n                        width: \"150px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        marginTop: \"1rem\"\r\n                      }}\r\n                      type=\"submit\"\r\n                      className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n  };\r\n  const mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n  });\r\n  export default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n  )(Login);","import axios from \"axios\";\r\n\r\nimport {\r\n    GET_ERRORS,\r\n    BUY_STOCK,\r\n    SELL_STOCK,\r\n    UPDATE_STOCKS\r\n} from \"./types\";\r\n\r\nconst url = \"https://www.alphavantage.co/query?\";\r\nconst func = \"function=TIME_SERIES_DAILY&symbol=\";\r\nlet symbol = \"\";\r\nconst apiKey = \"&apikey=Y6422ENO6XKRARUY\"\r\n// API ACCESS KEY:  \r\nexport const buyStock = (userData, tradeInfo) => dispatch => {\r\n    axios\r\n        .post(\"/api/users/stockRequest\", tradeInfo)\r\n        .then(res => {\r\n            console.log(\"POST REQUEST\")\r\n            symbol = tradeInfo.symbol;\r\n            return axios.get(url + func + symbol + apiKey);\r\n        })\r\n        .then(res => {\r\n            if(!res.data) throw(\"Improper symbol\")\r\n            console.log(\"POST API CALL\")\r\n            const obj = res.data[\"Time Series (Daily)\"];\r\n            console.log(\"POST OBJ\")\r\n            const dateStr = Object.keys(obj)[0];\r\n            console.log(\"POST DATESTR\")\r\n            let info = res.data[\"Time Series (Daily)\"][dateStr];\r\n            if(!info) { \r\n                console.log(\"WHOOPS\")\r\n                throw(\"STOCK INFO ERROR\"); }\r\n\r\n                console.log(\"UD: \" + userData)\r\n            const tradeData = {\r\n                userId: userData.id,\r\n                symbol: symbol,\r\n                quantity: tradeInfo.quantity,\r\n                stockInfo: info\r\n            }\r\n            console.log(\"tD userID: \" + tradeData.userId    )\r\n            console.log(\"BEFORE buyStock\")\r\n            axios.post(\"/api/users/buyStock\", tradeData)\r\n            .then(res => {\r\n                console.log(\"Returning Purchase\")\r\n                console.log(\"response: \" + res)\r\n                dispatch(returnPurchase(res));\r\n            })\r\n\r\n            \r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err\r\n            })\r\n        )\r\n}\r\n\r\nexport const sellStock = (userData, tradeInfo) => dispatch => {\r\n    axios\r\n        .post(\"/api/users/stockRequest\", tradeInfo)\r\n        .then(res => {\r\n            symbol = tradeInfo.symbol;\r\n            return axios.get(url + func + symbol + apiKey);\r\n        })\r\n        .then(res => {\r\n            const obj = res.data[\"Time Series (Daily)\"];\r\n            const dateStr = Object.keys(obj)[0];\r\n            let info = res.data[\"Time Series (Daily)\"][dateStr];\r\n            if(!info) { throw(\"STOCK INFO ERROR\"); }\r\n\r\n            const tradeData = {\r\n                userId: userData.id,\r\n                symbol: symbol,\r\n                quantity: tradeInfo.quantity,\r\n                stockInfo: info\r\n            }\r\n            axios.post(\"/api/users/sellStock\", tradeData)\r\n            .then(res => {\r\n\r\n                dispatch(returnSale(res));\r\n            })\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err\r\n            })\r\n        )\r\n}\r\n\r\nexport const returnPurchase = userData => {\r\n    return {\r\n        type: BUY_STOCK,\r\n        payload: userData \r\n    }\r\n}\r\n\r\nexport const returnSale = userData => {\r\n    return {\r\n        type: SELL_STOCK,\r\n        payload: userData\r\n    }\r\n}\r\n\r\nexport const updateStocks = userData => dispatch => {\r\n\r\n    const data = {\r\n        id: userData.id\r\n    }\r\n    axios\r\n    .post(\"/api/users/updateStocks\", data)\r\n    .then(res => {\r\n        dispatch(returnUpdate(res));\r\n    })\r\n\r\n}\r\n\r\nexport const returnUpdate = userData => {\r\n    return {\r\n        type: UPDATE_STOCKS,\r\n        payload: userData\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { logoutUser } from  \"../../actions/authActions\";\r\nimport { buyStock, sellStock, updateStocks } from \"../../actions/stockActions\";\r\nimport { ifError } from \"assert\";\r\n\r\nfunction HeldStock( {symbol, shares, currentValue, openValue}) {\r\n\r\n  let performanceColor = \"\"\r\n  if(currentValue > openValue) performanceColor = \"green\";\r\n  else if (currentValue < openValue) performanceColor = \"red\";\r\n  else performanceColor = \"grey\";\r\n\r\n  return (\r\n  <li style = {{color: performanceColor}}>{symbol} - {shares} shares ({currentValue*shares})</li>\r\n );\r\n}\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            symbol: \"\",\r\n            quantity: \"\",\r\n            balance: this.props.auth.user.balance,\r\n            portfolio: this.props.auth.user.ownedStocks,\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { user } = this.props.auth;\r\n      this.setState({\r\n        balance: user.balance,\r\n        portfolio: user.ownedStocks\r\n      })\r\n    }\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    onUpdateClick = e => {\r\n      e.preventDefault();\r\n\r\n      let user = \"\"\r\n      if(!this.props.stock.user.data) { user = this.props.auth.user; }\r\n      else { user = this.props.stock.user.data; }\r\n\r\n      this.props.updateStocks(user)\r\n      let result = this.props.stock.user.data\r\n      if(result) {\r\n        this.props.auth.user = result\r\n        this.setState({\r\n          portfolio: result.ownedStocks\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n  processRequest = async (user, tradeRequest, stockRequest) => {\r\n    return new Promise((resolve, reject) => {\r\n      let result = stockRequest(user, tradeRequest)\r\n      setTimeout(function() {\r\n        resolve(result)\r\n      }, 5000)\r\n    }).then(result => {\r\n      return result\r\n    })\r\n  };\r\n\r\n   onBuyClick = async e => {\r\n      e.preventDefault();\r\n\r\n      let tradeRequest = {\r\n          symbol: this.state.symbol,\r\n          quantity: this.state.quantity \r\n      };\r\n      let user = \"\"\r\n      if(!this.props.stock.user.data) { user = this.props.auth.user; }\r\n      else { user = this.props.stock.user.data; }\r\n\r\n      await this.processRequest(user, tradeRequest, this.props.buyStock)\r\n      let result = this.props.stock.user.data\r\n      if(result) {\r\n        this.props.auth.user = result\r\n        this.setState({\r\n          balance: result.balance,\r\n          portfolio: result.ownedStocks,\r\n        })\r\n      }\r\n  }\r\n\r\n    onSellClick = async e => {\r\n      e.preventDefault();\r\n\r\n      let tradeRequest = {\r\n        symbol: this.state.symbol,\r\n        quantity: this.state.quantity \r\n      };\r\n\r\n      let user = \"\"\r\n      if(!this.props.stock.user.data) { user = this.props.auth.user }\r\n      else { user = this.props.stock.user.data }\r\n\r\n      await this.processRequest(user, tradeRequest, this.props.sellStock)\r\n      let result = this.props.stock.user.data\r\n      if(result) {\r\n        this.props.auth.user = result\r\n        this.setState({\r\n          balance: result.balance,\r\n          portfolio: result.ownedStocks,\r\n        })\r\n      }\r\n    }\r\n\r\n    onChange = e => {\r\n      this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        let portfolio = undefined\r\n        let portfolioSum = 0\r\n        if(this.state.portfolio != null) {\r\n          portfolio = this.state.portfolio.map((stock, ii) => {\r\n            portfolioSum += stock.quantity*stock.unit_price\r\n            return(\r\n              <HeldStock \r\n                symbol={stock.symbol}\r\n                shares={stock.quantity}\r\n                currentValue={stock.unit_price}\r\n                openValue={stock.open_price}\r\n                key={ii}\r\n                />\r\n            );\r\n          })\r\n        } else { portfolio = \"No stocks owned yet.\"}\r\n\r\n        return (\r\n                <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col s6 center-align\">\r\n                      <h4>\r\n                        <b>Portfolio(${portfolioSum})</b>\r\n                      </h4>\r\n                      <ul>\r\n                        {portfolio}\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col s6 center-align\">\r\n                      <h4>\r\n                        Cash: (${this.state.balance})\r\n                      </h4>\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.symbol}\r\n                        error={errors.symbol}\r\n                        id=\"symbol\"\r\n                        type=\"text\"\r\n                        placeholder=\"Ticker Symbol\"\r\n                        className={classnames(\"\", {\r\n                          invalid: errors.symbol\r\n                        })} />\r\n                      <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.quantity}\r\n                        error={errors.quantity}\r\n                        id=\"quantity\"\r\n                        type=\"text\"\r\n                        placeholder=\"Quantity\"\r\n                        className={classnames(\"\", {\r\n                          invalid: errors.quantity\r\n                        })}\r\n                        />                        \r\n                      <button\r\n                        style={{\r\n                          width: \"100px\",\r\n                          borderRadius: \"3px\",\r\n                          letterSpacing: \"1.5px\",\r\n                          marginTop: \"1rem\",\r\n                          marginRight:\"2px\"\r\n                        }}\r\n                        onClick={this.onBuyClick}\r\n                        className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                      >\r\n                        Buy\r\n                      </button>\r\n                      <button\r\n                        style={{\r\n                          width: \"100px\",\r\n                          borderRadius: \"3px\",\r\n                          letterSpacing: \"1.5px\",\r\n                          marginTop: \"1rem\",\r\n                            marginRight:\"2px\"\r\n                        }}\r\n                        onClick={this.onSellClick}\r\n                        className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                      >\r\n                        Sell\r\n                      </button>\r\n                      <button\r\n                        style={{\r\n                          width: \"150px\",\r\n                          borderRadius: \"3px\",\r\n                          letterSpacing: \"1.5px\",\r\n                          marginTop: \"1rem\",\r\n                            marginRight:\"2px\"\r\n                        }}\r\n                        onClick={this.onUpdateClick}\r\n                        className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                      >\r\n                        Update Prices\r\n                      </button>\r\n                      <button\r\n                        style={{\r\n                          width: \"150px\",\r\n                          borderRadius: \"3px\",\r\n                          letterSpacing: \"1.5px\",\r\n                          marginTop: \"1rem\"\r\n                        }}\r\n                        onClick={this.onLogoutClick}\r\n                        className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                      >\r\n                        Logout\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    buyStock: PropTypes.func.isRequired,\r\n    sellStock: PropTypes.func.isRequired,\r\n    updateStocks: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    stock: state.stock\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser, buyStock, sellStock, updateStocks }\r\n  )(Dashboard);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dashboard } from \"../dashboard/Dashboard\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  \r\n  <Route\r\n    {...rest}\r\n    render={ (props) => \r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Record( {date, t_type, symbol, shares, price}) {\r\n    let sign = \"\"\r\n    if(t_type === \"BUY\") sign = '-'\r\n    else sign = '+'\r\n    return (\r\n    <li>{date} - {t_type} {symbol} - {shares} shares ({sign}${price*shares})</li>\r\n   );\r\n  }\r\n\r\nclass History extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transactions: this.props.auth.user.transactions,\r\n            errors: {}\r\n        };\r\n      }\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        console.log(\"CDM USER: \" + user)\r\n        this.setState({\r\n            transactions: user.transactions\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"STATE: \" + this.state)\r\n        console.log(\"PROPS: \" + this.props.auth)\r\n\r\n        const { user } = this.props.auth\r\n        let transactions = undefined\r\n        if(this.state.transactions != null) {\r\n            transactions = this.state.transactions.map((record, ii) => {\r\n                console.log(record)\r\n                let date = new Date(record.date).toDateString()\r\n              return(\r\n                <Record\r\n                  date={date}\r\n                  t_type={record.transaction_type}\r\n                  symbol={record.symbol}\r\n                  shares={record.stock_quantity}\r\n                  price={record.stock_price}\r\n                  key={ii}\r\n                  />\r\n              );\r\n            })\r\n          } else { transactions = \"No transactions made yet.\"}\r\n        return(\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n              <div className=\"row\">\r\n                <div className=\"col s12 center-align\">\r\n                <h3>Transaction Record</h3>\r\n                    <ul>\r\n                    {transactions}\r\n                    </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nHistory.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    stock: state.stock\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {}\r\n  )(History);","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport './App.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport History from \"./components/dashboard/History\"\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set Auth Token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  \n\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute  exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/history\" component={History} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}